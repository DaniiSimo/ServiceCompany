services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    networks: [laravel]
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /tmp/app_ready ]"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:stable-alpine3.21
    networks: [laravel]
    command: ["nginx", "-g", "daemon off;"]
    expose:
      - "${PORT:-80}"
    env_file:
      - ./.env.nginx
    ports:
      - "${PORT:-80}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app:
        condition: service_healthy

  db:
    image: postgis/postgis:16-3.4-alpine
    restart: unless-stopped
    env_file:
      - ./.env.database
    user: "${SUPER_USER:-postgres}"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=\"$$POSTGRES_PASSWORD\" psql -h 127.0.0.1 -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\" -tAc 'SELECT 1' >/dev/null || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks: [laravel]

networks:
  laravel:
    driver: bridge

volumes:
  dbdata:
